// <auto-generated />
using System;
using DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBContext.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230209164117_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Properties.Entities.Hmo", b =>
                {
                    b.Property<int>("IdHmo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHMO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHmo"));

                    b.Property<string>("Hmo1")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("HMO")
                        .IsFixedLength();

                    b.HasKey("IdHmo");

                    b.ToTable("HMO", (string)null);
                });

            modelBuilder.Entity("Properties.Entities.Sex", b =>
                {
                    b.Property<int>("IdSex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSex");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSex"));

                    b.Property<string>("Sex1")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("sex")
                        .IsFixedLength();

                    b.HasKey("IdSex");

                    b.ToTable("Sex", (string)null);
                });

            modelBuilder.Entity("Properties.Entities.Status", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idStatus");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"));

                    b.Property<string>("Status1")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.HasKey("IdStatus");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("Properties.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birthDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("Id")
                        .HasMaxLength(9)
                        .HasColumnType("nchar(9)")
                        .HasColumnName("id")
                        .IsFixedLength();

                    b.Property<string>("IdFamily")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nchar(9)")
                        .HasColumnName("idFamily")
                        .IsFixedLength();

                    b.Property<int?>("IdHmo")
                        .HasColumnType("int")
                        .HasColumnName("idHMO");

                    b.Property<int?>("IdSex")
                        .HasColumnType("int")
                        .HasColumnName("idSex");

                    b.Property<int?>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("idStatus");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastName");

                    b.HasKey("IdUser");

                    b.HasIndex("IdHmo");

                    b.HasIndex("IdSex");

                    b.HasIndex("IdStatus");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Properties.Entities.User", b =>
                {
                    b.HasOne("Properties.Entities.Hmo", "IdHmoNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdHmo")
                        .HasConstraintName("FK_User_HMO");

                    b.HasOne("Properties.Entities.Sex", "IdSexNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdSex")
                        .HasConstraintName("FK_User_Sex");

                    b.HasOne("Properties.Entities.Status", "IdStatusNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK_User_Status");

                    b.Navigation("IdHmoNavigation");

                    b.Navigation("IdSexNavigation");

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("Properties.Entities.Hmo", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Properties.Entities.Sex", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Properties.Entities.Status", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
